@page "/add-articulo"

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@inject ILogger<AddArticulo> logger
@using MediatR
@using Zimat.Inventarios.UseCases.Articulos.Create
@using Zimat.Inventarios.UseCases.Contributors.Create
@inject IMediator _mediator

<PageTitle>Nuevo Artículo</PageTitle>

<RadzenColumn SizeMD=12>
    <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save Product</RadzenAlert>
    <RadzenTemplateForm TItem="ArticuloDTO" Data="@product" Visible="@(product != null)" Submit="@FormSubmit">
        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Clave" Component="producto_id" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenNumeric style="display: block; width: 100%" @bind-Value="@product!.Id" Name="producto_id" />
                <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Descripción" Component="descripcion" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@product!.Name" Name="descripcion" />
                <RadzenRequiredValidator Component="descripcion" Text="descripcion is required" />
            </RadzenColumn>
        </RadzenRow>
        
        <RadzenTabs @bind-SelectedIndex=@selectedIndex>
            <Tabs>
                <RadzenTabsItem Text="Clasificación">
                    <RadzenRow style="margin-bottom: 1rem">
                        <RadzenColumn SizeMD="3">
                            <RadzenLabel Text="Linea" Component="producto_id"  />
                        </RadzenColumn>
                        <RadzenColumn SizeMD="9">
                            <RadzenTextBox style="display: block;"  Name="producto_id" />
                            <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
                        </RadzenColumn>
                    </RadzenRow>
                    <RadzenRow style="margin-bottom: 1rem">
                        <RadzenColumn SizeMD="3">
                            <RadzenLabel Text="Familia" Component="producto_id"  />
                        </RadzenColumn>
                        <RadzenColumn SizeMD="9">
                            <RadzenTextBox style="display: block;"  Name="producto_id" />
                            <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
                        </RadzenColumn>
                    </RadzenRow>
                    <RadzenRow style="margin-bottom: 1rem">
                        <RadzenColumn SizeMD="3">
                            <RadzenLabel Text="Categoria" Component="producto_id" />
                        </RadzenColumn>
                        <RadzenColumn SizeMD="9">
                            <RadzenTextBox style="display: block;" Name="producto_id" />
                            <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
                        </RadzenColumn>
                    </RadzenRow>
                    <RadzenRow style="margin-bottom: 1rem">
                        <RadzenColumn SizeMD="3">
                            <RadzenLabel Text="Departamento" Component="producto_id" />
                        </RadzenColumn>
                        <RadzenColumn SizeMD="9">
                            <RadzenTextBox style="display: block;" Name="producto_id" />
                            <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
                        </RadzenColumn>
                    </RadzenRow>
                 </RadzenTabsItem>
                <RadzenTabsItem Text="Precios">
                    <RadzenRow style="margin-bottom: 1rem">
                        <RadzenColumn SizeMD="3">
                            <RadzenLabel Text="Divisa" Component="producto_id" />
                        </RadzenColumn>
                        <RadzenColumn SizeMD="9">
                            <RadzenTextBox style="display: block;" Name="producto_id" />
                            <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
                        </RadzenColumn>
                    </RadzenRow>
                    <RadzenRow style="margin-bottom: 1rem">
                        <RadzenColumn SizeMD="3">
                            <RadzenLabel Text="Impuestos" Component="producto_id" />
                        </RadzenColumn>
                        <RadzenColumn SizeMD="9">
                            <RadzenTextBox style="display: block;" Name="producto_id" />
                            <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Order Details">
                   
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
            <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick" />
        </RadzenStack>
    </RadzenTemplateForm>
</RadzenColumn>

@code {

    protected class ArticuloDTO
    {
        public string Clave { get; set; } = Guard.Against.NullOrEmpty(clave, nameof(clave));
        public string Descripcion { get; set; } = Guard.Against.NullOrEmpty(descripcion, nameof(descripcion));
        public string? Codigo { get; set; }
        public string? Unidad { get; set; }
        public string? Unidefa { get; set; }
        public string? Marca { get; set; }
        public string? Modelo { get; set; }
        public string? Linea { get; set; }
        public string? Familia { get; set; }
        public string? Categoria { get; set; }
        public string? Numdep { get; set; }
        public string? Valdep { get; set; }
        public string? Ubicacion { get; set; }
        public bool Series { get; set; }
        public decimal Impuesto1 { get; set; }
        public decimal Impuesto2 { get; set; }
        public string? Numprov { get; set; }
        public string? Numprov1 { get; set; }
        public string? Numprov2 { get; set; }
        public string? Numprov3 { get; set; }
        public DateTime Ultcomp { get; set; }
        public DateTime Ultcomp1 { get; set; }
        public DateTime Ultcomp2 { get; set; }
        public DateTime Ultcomp3 { get; set; }
        public DateTime Ultvent { get; set; }
        public decimal Existencia { get; set; }
        public decimal Minimo { get; set; }
        public decimal Maximo { get; set; }
        public decimal Reorden { get; set; }
        public string? Divisa { get; set; }
        public decimal Precio1 { get; set; }
        public decimal Precio2 { get; set; }
        public decimal Precio3 { get; set; }
        public decimal Precio4 { get; set; }
        public decimal Precio5 { get; set; }
        public decimal Factor1 { get; set; }
        public decimal Factor2 { get; set; }
        public decimal Factor3 { get; set; }
        public decimal Factor4 { get; set; }
        public decimal Factor5 { get; set; }
        public decimal UltimoCosto { get; set; }
        public bool Activo { get; set; }

    }
    protected override void OnInitialized()
    {
        product ??= new();
    }
    protected bool errorVisible;
    [SupplyParameterFromForm]
    protected ArticuloDTO product { get; set; } = new();

    int selectedIndex = 0;

    protected async Task FormSubmit()
    {

        try
        {
            //await zimatService.CreateProduct(product);
            var result = await _mediator.Send(new CreateArticuloCommand(product.Clave, product.Codigo));
            DialogService.Close(product);
        }
        catch (Exception)
        {
            errorVisible = true;
        }

    }

    void OnChange(string value, string name)
    {
        logger.LogInformation($"{name} value changed to {value}");
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        await Task.Run(() => DialogService.Close(null));
    }
}

