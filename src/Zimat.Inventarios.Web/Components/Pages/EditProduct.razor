@page "/edit-product"
@using MediatR
@using Zimat.Inventarios.UseCases.Contributors.Get
@using Zimat.Inventarios.UseCases.Contributors.Update
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@inject IMediator _mediator

@* @inject zimatService zimatService *@

<PageTitle>Edit Product</PageTitle>

    <RadzenColumn SizeMD=12>
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save Product</RadzenAlert>
        <RadzenTemplateForm TItem="ContributorDTO" Data="@product" Visible="@(product != null)" Submit="@FormSubmit">
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Id" Component="producto_id" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@product!.Id" Name="producto_id" />
                    <RadzenRequiredValidator Component="producto_id" Text="producto_id is required" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Nombre" Component="descripcion" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@product!.Name" Name="descripcion" />
                    <RadzenRequiredValidator Component="descripcion" Text="descripcion is required" />
                </RadzenColumn>
            </RadzenRow>
          <RadzenStack  Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick"  />
          </RadzenStack>
        </RadzenTemplateForm>
    </RadzenColumn>

@code {

    protected class ContributorDTO
    {
        public int Id {get; set;}
        public string Name {get; set;} = string.Empty;
        public string? PhoneNumber {get; set;}

    }

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //product = await zimatService.GetProductByProductoId(producto_id);
        var result = await _mediator.Send(new GetContributorQuery(Id));
        if (result.IsSuccess)
        {
            product.Id = result.Value.Id;
            product.Name = result.Value.Name;
            product.PhoneNumber = result.Value.PhoneNumber;
        }

    }
    protected bool errorVisible;
    protected ContributorDTO product {get; set;} = new();

    protected async Task FormSubmit()
    {

        try
        {
           
            var result = await _mediator.Send(new UpdateContributorCommand(product.Id, product.Name!));

            
            DialogService.Close(product);
        }
        catch (Exception)
        {
            errorVisible = true;
        }
        
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        await Task.Run(() => DialogService.Close(null));
    }
}
