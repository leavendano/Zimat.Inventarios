// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Zimat.Inventarios.Infrastructure.Data;

#nullable disable

namespace Zimat.Inventarios.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241216081015_ImpuestoDocumento")]
    partial class ImpuestoDocumento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Zimat.Inventarios.Core.ArticuloAggregate.Articulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean")
                        .HasColumnName("activo");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clave");

                    b.Property<string>("Codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("integer")
                        .HasColumnName("departamento_id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descripcion");

                    b.Property<decimal>("DescuentoMaximo")
                        .HasColumnType("numeric")
                        .HasColumnName("descuento_maximo");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<decimal>("Existencia")
                        .HasColumnType("numeric")
                        .HasColumnName("existencia");

                    b.Property<int?>("FamiliaId")
                        .HasColumnType("integer")
                        .HasColumnName("familia_id");

                    b.Property<decimal>("Impuesto1")
                        .HasColumnType("numeric")
                        .HasColumnName("impuesto1");

                    b.Property<decimal>("Impuesto2")
                        .HasColumnType("numeric")
                        .HasColumnName("impuesto2");

                    b.Property<int?>("LineaId")
                        .HasColumnType("integer")
                        .HasColumnName("linea_id");

                    b.Property<string>("Marca")
                        .HasColumnType("text")
                        .HasColumnName("marca");

                    b.Property<decimal>("Maximo")
                        .HasColumnType("numeric")
                        .HasColumnName("maximo");

                    b.Property<decimal>("Minimo")
                        .HasColumnType("numeric")
                        .HasColumnName("minimo");

                    b.Property<string>("Modelo")
                        .HasColumnType("text")
                        .HasColumnName("modelo");

                    b.Property<decimal>("PrecioPublico")
                        .HasColumnType("numeric")
                        .HasColumnName("precio_publico");

                    b.Property<decimal>("Reorden")
                        .HasColumnType("numeric")
                        .HasColumnName("reorden");

                    b.Property<bool>("Series")
                        .HasColumnType("boolean")
                        .HasColumnName("series");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("text")
                        .HasColumnName("ubicacion");

                    b.Property<DateTime?>("UltimaCompra")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_compra");

                    b.Property<DateTime?>("UltimaVenta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_venta");

                    b.Property<decimal?>("UltimoCosto")
                        .HasColumnType("numeric")
                        .HasColumnName("ultimo_costo");

                    b.Property<int>("UnidadId")
                        .HasColumnType("integer")
                        .HasColumnName("unidad_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_articulos");

                    b.ToTable("articulos", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.CategoriaAggregate.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<decimal>("Margen")
                        .HasColumnType("numeric")
                        .HasColumnName("margen");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_categorias");

                    b.ToTable("categorias", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.DepartamentoAggregate.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_departamentos");

                    b.ToTable("departamentos", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.DocumentoAggregate.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int?>("AlmacenId")
                        .HasColumnType("integer")
                        .HasColumnName("almacen_id");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("numeric")
                        .HasColumnName("descuento");

                    b.Property<string>("Divisa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("divisa");

                    b.Property<Guid?>("DocumentoRelacionadoId")
                        .HasColumnType("uuid")
                        .HasColumnName("documento_relacionado_id");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_pago");

                    b.Property<string>("Folio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("folio");

                    b.Property<int?>("FormaPagoId")
                        .HasColumnType("integer")
                        .HasColumnName("forma_pago_id");

                    b.Property<decimal>("Importe")
                        .HasColumnType("numeric")
                        .HasColumnName("importe");

                    b.Property<decimal>("Impuesto1")
                        .HasColumnType("numeric")
                        .HasColumnName("impuesto1");

                    b.Property<decimal>("Impuesto2")
                        .HasColumnType("numeric")
                        .HasColumnName("impuesto2");

                    b.Property<decimal>("PDescuento")
                        .HasColumnType("numeric")
                        .HasColumnName("p_descuento");

                    b.Property<bool>("Pagado")
                        .HasColumnType("boolean")
                        .HasColumnName("pagado");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("integer")
                        .HasColumnName("proveedor_id");

                    b.Property<string>("Referencia")
                        .HasColumnType("text")
                        .HasColumnName("referencia");

                    b.Property<decimal>("SaldoAnticipo")
                        .HasColumnType("numeric")
                        .HasColumnName("saldo_anticipo");

                    b.Property<decimal>("TipoCambio")
                        .HasColumnType("numeric")
                        .HasColumnName("tipo_cambio");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_documento_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_documentos");

                    b.ToTable("documentos", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.DocumentoAggregate.DocumentoConcepto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uuid")
                        .HasColumnName("articulo_id");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric")
                        .HasColumnName("cantidad");

                    b.Property<decimal>("Costo")
                        .HasColumnType("numeric")
                        .HasColumnName("costo");

                    b.Property<decimal>("CostoPromedio")
                        .HasColumnType("numeric")
                        .HasColumnName("costo_promedio");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("numeric")
                        .HasColumnName("descuento");

                    b.Property<decimal>("Devueltos")
                        .HasColumnType("numeric")
                        .HasColumnName("devueltos");

                    b.Property<Guid>("DocumentoId")
                        .HasColumnType("uuid")
                        .HasColumnName("documento_id");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<decimal>("Importe")
                        .HasColumnType("numeric")
                        .HasColumnName("importe");

                    b.Property<decimal>("Impuesto1")
                        .HasColumnType("numeric")
                        .HasColumnName("impuesto1");

                    b.Property<decimal>("Impuesto2")
                        .HasColumnType("numeric")
                        .HasColumnName("impuesto2");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("text")
                        .HasColumnName("numero_serie");

                    b.Property<decimal>("Pendiente")
                        .HasColumnType("numeric")
                        .HasColumnName("pendiente");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric")
                        .HasColumnName("precio");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_documento_conceptos");

                    b.HasIndex("DocumentoId")
                        .HasDatabaseName("ix_documento_conceptos_documento_id");

                    b.ToTable("documento_conceptos", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.FamiliaAggregate.Familia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<decimal>("Margen")
                        .HasColumnType("numeric")
                        .HasColumnName("margen");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_familias");

                    b.ToTable("familias", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.LineaAggregate.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<decimal>("Margen")
                        .HasColumnType("numeric")
                        .HasColumnName("margen");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_lineas");

                    b.ToTable("lineas", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.ProveedorAggregate.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Calle")
                        .HasColumnType("text")
                        .HasColumnName("calle");

                    b.Property<string>("Ciudad")
                        .HasColumnType("text")
                        .HasColumnName("ciudad");

                    b.Property<string>("Clasificacion")
                        .HasColumnType("text")
                        .HasColumnName("clasificacion");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clave");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_postal");

                    b.Property<string>("Colonia")
                        .HasColumnType("text")
                        .HasColumnName("colonia");

                    b.Property<string>("Contacto")
                        .HasColumnType("text")
                        .HasColumnName("contacto");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CuentaContable")
                        .HasColumnType("text")
                        .HasColumnName("cuenta_contable");

                    b.Property<int>("DiasCredito")
                        .HasColumnType("integer")
                        .HasColumnName("dias_credito");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .HasColumnType("text")
                        .HasColumnName("estado");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroExterior")
                        .HasColumnType("text")
                        .HasColumnName("numero_exterior");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rfc");

                    b.Property<string>("Telefono")
                        .HasColumnType("text")
                        .HasColumnName("telefono");

                    b.Property<int>("TipoProveedor")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_proveedor");

                    b.Property<DateTime?>("UltimaCompra")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_compra");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_proveedores");

                    b.ToTable("proveedores", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.UnidadAggregate.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaveSat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clave_sat");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer")
                        .HasColumnName("estatus");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("pk_unidades");

                    b.ToTable("unidades", (string)null);
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.DocumentoAggregate.DocumentoConcepto", b =>
                {
                    b.HasOne("Zimat.Inventarios.Core.DocumentoAggregate.Documento", null)
                        .WithMany("Conceptos")
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_documento_conceptos_documentos_documento_id");
                });

            modelBuilder.Entity("Zimat.Inventarios.Core.DocumentoAggregate.Documento", b =>
                {
                    b.Navigation("Conceptos");
                });
#pragma warning restore 612, 618
        }
    }
}
